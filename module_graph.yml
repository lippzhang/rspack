{ 
  dependency_id_to_module_identifier: { 
    DependencyId(0): Identifier(u!("/Users/zhanglipeng/work/github/rspack/examples/basic/src/index.js")), 
    DependencyId(2): Identifier(u!("/Users/zhanglipeng/work/github/rspack/examples/basic/src/foo.js")), 
    DependencyId(1): Identifier(u!("/Users/zhanglipeng/work/github/rspack/examples/basic/src/answer.js")), 
    DependencyId(3): Identifier(u!("/Users/zhanglipeng/work/github/rspack/examples/basic/src/bar.js"))
   }, 
  module_identifier_to_module: {
    Identifier(u!("/Users/zhanglipeng/work/github/rspack/examples/basic/src/index.js")): NormalModule { id: Identifier(u!("/Users/zhanglipeng/work/github/rspack/examples/basic/src/index.js")), context: Context { inner: "/Users/zhanglipeng/work/github/rspack/examples/basic/src" }, request: "/Users/zhanglipeng/work/github/rspack/examples/basic/src/index.js", user_request: "/Users/zhanglipeng/work/github/rspack/examples/basic/src/index.js", raw_request: "./src/index.js", module_type: Js, parser_and_generator: JavaScriptParserAndGenerator, match_resource: None, resource_data: ResourceData { resource: "/Users/zhanglipeng/work/github/rspack/examples/basic/src/index.js", resource_path: "/Users/zhanglipeng/work/github/rspack/examples/basic/src/index.js", resource_query: None, resource_fragment: None, resource_description: Some(DescriptionData { json: PkgJSON { name: Some("example-basic"), alias_fields: OnceCell([]), raw: Object {"name": String("example-basic"), "version": String("1.0.0"), "description": String(""), "main": String("index.js"), "private": Bool(true), "scripts": Object {"dev": String("rspack serve"), "build": String("rspack build")}, "devDependencies": Object {"@rspack/cli": String("workspace:*")}, "sideEffects": Bool(false), "keywords": Array [], "author": String(""), "license": String("MIT"), "dependencies": Object {"@rspack/core": String("workspace:^0.2.8")}} }, dir_path: NormalizedPath("/Users/zhanglipeng/work/github/rspack/examples/basic") }), mimetype: None, parameters: None, encoding: None, encoded_content: None, scheme: OnceCell(None) }, original_source: Some(Buffer([105, 109, 112, 111, 114, 116, 32, 123, 32, 97, 110, 115, 119, 101, 114, 32, 125, 32, 102, 114, 111, 109, 32, 34, 46, 47, 97, 110, 115, 119, 101, 114, 34, 59, 10, 102, 117, 110, 99, 116, 105, 111, 110, 32, 114, 101, 110, 100, 101, 114, 40, 41, 32, 123, 10, 9, 100, 111, 99, 117, 109, 101, 110, 116, 46, 103, 101, 116, 69, 108, 101, 109, 101, 110, 116, 66, 121, 73, 100, 40, 10, 9, 9, 34, 114, 111, 111, 116, 34, 10, 9, 41, 46, 105, 110, 110, 101, 114, 72, 84, 77, 76, 32, 61, 32, 96, 116, 104, 101, 32, 97, 110, 115, 119, 101, 114, 32, 116, 111, 32, 116, 104, 101, 32, 117, 110, 105, 118, 101, 114, 115, 101, 32, 105, 115, 32, 36, 123, 97, 110, 115, 119, 101, 114, 125, 96, 59, 10, 125, 10, 114, 101, 110, 100, 101, 114, 40, 41, 59, 10])), ast_or_source: BuiltSucceed(AstOrSource { inner: (Some(JavaScript(Ast { program: Program { program: Module(Module { span: Span { lo: BytePos(1), hi: BytePos(158), ctxt: #0 }, body: [ModuleDecl(Import(ImportDecl { span: Span { lo: BytePos(1), hi: BytePos(35), ctxt: #0 }, specifiers: [Named(ImportNamedSpecifier { span: Span { lo: BytePos(10), hi: BytePos(16), ctxt: #0 }, local: Ident { span: Span { lo: BytePos(10), hi: BytePos(16), ctxt: #2 }, sym: Atom('answer' type=inline), optional: false }, imported: None, is_type_only: false })], src: Str { span: Span { lo: BytePos(24), hi: BytePos(34), ctxt: #0 }, value: Atom('./answer' type=dynamic), raw: Some("\"./answer\"") }, type_only: false, asserts: None })), Stmt(Decl(Fn(FnDecl { ident: Ident { span: Span { lo: BytePos(45), hi: BytePos(51), ctxt: #2 }, sym: Atom('render' type=inline), optional: false }, declare: false, function: Function { params: [], decorators: [], span: Span { lo: BytePos(36), hi: BytePos(148), ctxt: #3 }, body: Some(BlockStmt { span: Span { lo: BytePos(54), hi: BytePos(148), ctxt: #3 }, stmts: [Expr(ExprStmt { span: Span { lo: BytePos(60), hi: BytePos(146), ctxt: #0 }, expr: Assign(AssignExpr { span: Span { lo: BytePos(60), hi: BytePos(145), ctxt: #0 }, op: "=", left: Pat(Expr(Member(MemberExpr { span: Span { lo: BytePos(60), hi: BytePos(101), ctxt: #0 }, obj: Call(CallExpr { span: Span { lo: BytePos(60), hi: BytePos(91), ctxt: #0 }, callee: Expr(Member(MemberExpr { span: Span { lo: BytePos(60), hi: BytePos(83), ctxt: #0 }, obj: Ident(Ident { span: Span { lo: BytePos(60), hi: BytePos(68), ctxt: #1 }, sym: Atom('document' type=static), optional: false }), prop: Ident(Ident { span: Span { lo: BytePos(69), hi: BytePos(83), ctxt: #0 }, sym: Atom('getElementById' type=dynamic), optional: false }) })), args: [ExprOrSpread { spread: None, expr: Lit(Str(Str { span: Span { lo: BytePos(84), hi: BytePos(90), ctxt: #0 }, value: Atom('root' type=inline), raw: Some("\"root\"") })) }], type_args: None }), prop: Ident(Ident { span: Span { lo: BytePos(92), hi: BytePos(101), ctxt: #0 }, sym: Atom('innerHTML' type=dynamic), optional: false }) }))), right: Tpl(Tpl { span: Span { lo: BytePos(104), hi: BytePos(145), ctxt: #0 }, exprs: [Ident(Ident { span: Span { lo: BytePos(137), hi: BytePos(143), ctxt: #2 }, sym: Atom('answer' type=inline), optional: false })], quasis: [TplElement { span: Span { lo: BytePos(105), hi: BytePos(135), ctxt: #0 }, tail: false, cooked: Some("the answer to the universe is "), raw: "the answer to the universe is " }, TplElement { span: Span { lo: BytePos(144), hi: BytePos(144), ctxt: #0 }, tail: true, cooked: Some(""), raw: "" }] }) }) })] }), is_generator: false, is_async: false, type_params: None, return_type: None } }))), Stmt(Expr(ExprStmt { span: Span { lo: BytePos(149), hi: BytePos(158), ctxt: #0 }, expr: Call(CallExpr { span: Span { lo: BytePos(149), hi: BytePos(157), ctxt: #0 }, callee: Expr(Ident(Ident { span: Span { lo: BytePos(149), hi: BytePos(155), ctxt: #2 }, sym: Atom('render' type=inline), optional: false })), args: [], type_args: None }) }))], shebang: None }), comments: "..." }, context: Context { helpers: Helpers { external: true, mark: HelperMark(Mark(3)), inner: Inner { apply_decorated_descriptor: false, array_like_to_array: false, array_with_holes: false, array_without_holes: false, assert_this_initialized: false, async_generator: false, async_generator_delegate: false, async_iterator: false, async_to_generator: false, await_async_generator: false, await_value: false, check_private_redeclaration: false, class_apply_descriptor_destructure: false, class_apply_descriptor_get: false, class_apply_descriptor_set: false, class_apply_descriptor_update: false, class_call_check: false, class_check_private_static_field_descriptor: false, class_extract_field_descriptor: false, class_name_tdz_error: false, class_private_field_get: false, class_private_field_init: false, class_private_field_loose_base: false, class_private_field_loose_key: false, class_private_field_set: false, class_private_field_update: false, class_private_method_get: false, class_private_method_init: false, class_private_method_set: false, class_static_private_field_spec_get: false, class_static_private_field_spec_set: false, class_static_private_field_update: false, construct: false, create_class: false, decorate: false, defaults: false, define_enumerable_properties: false, define_property: false, export_star: false, extends: false, get: false, get_prototype_of: false, inherits: false, inherits_loose: false, initializer_define_property: false, initializer_warning_helper: false, instanceof: false, interop_require_default: false, interop_require_wildcard: false, is_native_function: false, iterable_to_array: false, iterable_to_array_limit: false, iterable_to_array_limit_loose: false, jsx: false, new_arrow_check: false, non_iterable_rest: false, non_iterable_spread: false, object_destructuring_empty: false, object_spread: false, object_spread_props: false, object_without_properties: false, object_without_properties_loose: false, possible_constructor_return: false, read_only_error: false, set: false, set_prototype_of: false, skip_first_generator_next: false, sliced_to_array: false, sliced_to_array_loose: false, super_prop_base: false, tagged_template_literal: false, tagged_template_literal_loose: false, throw: false, to_array: false, to_consumable_array: false, to_primitive: false, to_property_key: false, update: false, type_of: false, unsupported_iterable_to_array: false, wrap_async_generator: false, wrap_native_super: false, write_only_error: false, class_private_field_destructure: false, class_static_private_field_destructure: false, class_static_private_method_get: false, class_check_private_static_access: false, is_native_reflect_construct: false, create_super: false, create_for_of_iterator_helper_loose: false, ts_decorate: false, ts_generator: false, ts_metadata: false, ts_param: false, ts_values: false, apply_decs_2203_r: false, identity: false, dispose: false, using: false } }, top_level_mark: Mark(1), unresolved_mark: Mark(2) } })), Some(SourceMapSource { value: "import { answer } from \"./answer\";\nfunction render() {\n    document.getElementById(\"root\").innerHTML = `the answer to the universe is ${answer}`;\n}\nrender();\n", name: "/Users/zhanglipeng/work/github/rspack/examples/basic/src/index.js", source_map: SourceMap { file: None, mappings: "AAAA,SAAS,MAAM,QAAQ,WAAW;AAClC,SAAS;IACR,SAAS,cAAc,CACtB,QACC,SAAS,GAAG,CAAC,8BAA8B,EAAE,OAAO,CAAC;AACxD;AACA", sources: ["/Users/zhanglipeng/work/github/rspack/examples/basic/src/index.js"], sources_content: ["import { answer } from \"./answer\";\nfunction render() {\n\tdocument.getElementById(\n\t\t\"root\"\n\t).innerHTML = `the answer to the universe is ${answer}`;\n}\nrender();\n"], names: [] }, original_source: None, inner_source_map: None, remove_original_source: false })) }), resolve_options: None, parser_options: None, generator_options: None, options: CompilerOptions { context: Context { inner: "/Users/zhanglipeng/work/github/rspack/examples/basic" }, dev_server: DevServerOptions { hot: false }, output: OutputOptions { path: "/Users/zhanglipeng/work/github/rspack/packages/rspack-cli/dist", clean: false, public_path: Auto, asset_module_filename: Filename { template: "[hash][ext][query]" }, wasm_loading: Enable(Fetch), webassembly_module_filename: Filename { template: "[hash].module.wasm" }, unique_name: "example-basic", chunk_loading: Enable(Jsonp), chunk_loading_global: "webpackChunkexample_basic", filename: Filename { template: "[name].js" }, chunk_filename: Filename { template: "[name].js" }, cross_origin_loading: Disable, css_filename: Filename { template: "[name].css" }, css_chunk_filename: Filename { template: "[name].css" }, hot_update_main_filename: Filename { template: "[runtime].[fullhash].hot-update.json" }, hot_update_chunk_filename: Filename { template: "[id].[fullhash].hot-update.js" }, library: None, enabled_library_types: Some([]), strict_module_error_handling: false, global_object: "self", import_function_name: "import", iife: true, module: false, trusted_types: None, source_map_filename: Filename { template: "[file].map" }, hash_function: MD4, hash_digest: Hex, hash_digest_length: 20, hash_salt: None, async_chunks: true, worker_chunk_loading: Enable(ImportScripts), worker_wasm_loading: Enable(Fetch), worker_public_path: "" }, target: Target { es_version: None }, mode: Production, resolve: Resolve { extensions: Some([]), alias: Some([("@swc/helpers", [Target("/Users/zhanglipeng/work/github/rspack/node_modules/@swc/helpers")]), ("react-refresh", [Target("/Users/zhanglipeng/work/github/rspack/node_modules/react-refresh")])]), prefer_relative: None, symlinks: None, main_files: Some(["index"]), main_fields: Some(["main"]), browser_field: Some(true), condition_names: Some(["webpack", "production", "browser"]), tsconfig: None, modules: Some(["node_modules"]), fallback: Some([]), fully_specified: None, exports_field: Some([["exports"]]), extension_alias: Some([]), by_dependency: Some(ByDependency({Unknown: Resolve { extensions: Some([".js", ".json", ".wasm", ".tsx", ".ts", ".jsx"]), alias: Some([]), prefer_relative: None, symlinks: None, main_files: None, main_fields: Some(["browser", "module", "..."]), browser_field: Some(true), condition_names: Some(["require", "module", "..."]), tsconfig: None, modules: None, fallback: Some([]), fully_specified: None, exports_field: None, extension_alias: Some([]), by_dependency: None }, Wasm: Resolve { extensions: Some([".js", ".json", ".wasm", ".tsx", ".ts", ".jsx"]), alias: Some([]), prefer_relative: None, symlinks: None, main_files: None, main_fields: Some(["browser", "module", "..."]), browser_field: Some(true), condition_names: Some(["import", "module", "..."]), tsconfig: None, modules: None, fallback: Some([]), fully_specified: None, exports_field: None, extension_alias: Some([]), by_dependency: None }, Esm: Resolve { extensions: Some([".js", ".json", ".wasm", ".tsx", ".ts", ".jsx"]), alias: Some([]), prefer_relative: None, symlinks: None, main_files: None, main_fields: Some(["browser", "module", "..."]), browser_field: Some(true), condition_names: Some(["import", "module", "..."]), tsconfig: None, modules: None, fallback: Some([]), fully_specified: None, exports_field: None, extension_alias: Some([]), by_dependency: None }, CommonJS: Resolve { extensions: Some([".js", ".json", ".wasm", ".tsx", ".ts", ".jsx"]), alias: Some([]), prefer_relative: None, symlinks: None, main_files: None, main_fields: Some(["browser", "module", "..."]), browser_field: Some(true), condition_names: Some(["require", "module", "..."]), tsconfig: None, modules: None, fallback: Some([]), fully_specified: None, exports_field: None, extension_alias: Some([]), by_dependency: None }, Url: Resolve { extensions: None, alias: Some([]), prefer_relative: Some(true), symlinks: None, main_files: None, main_fields: None, browser_field: None, condition_names: None, tsconfig: None, modules: None, fallback: Some([]), fully_specified: None, exports_field: None, extension_alias: Some([]), by_dependency: None }, Worker: Resolve { extensions: Some([".js", ".json", ".wasm", ".tsx", ".ts", ".jsx"]), alias: Some([]), prefer_relative: Some(true), symlinks: None, main_files: None, main_fields: Some(["browser", "module", "..."]), browser_field: Some(true), condition_names: Some(["import", "module", "..."]), tsconfig: None, modules: None, fallback: Some([]), fully_specified: None, exports_field: None, extension_alias: Some([]), by_dependency: None }})) }, builtins: Builtins { minify_options: Some(Minification { passes: 1, drop_console: false, pure_funcs: [], extract_comments: None, test: None, include: None, exclude: None }), preset_env: None, define: {"process.env.NODE_ENV": "\"production\""}, provide: {}, tree_shaking: True, react: ReactOptions { runtime: Some("automatic"), import_source: None, pragma: None, pragma_frag: None, throw_if_namespace: None, development: None, use_builtins: None, use_spread: None, refresh: None }, decorator: Some(DecoratorOptions { legacy: true, emit_metadata: true }), no_emit_assets: false, emotion: None, dev_friendly_split_chunks: false, plugin_import: None, relay: None, code_generation: Some(CodeGeneration { keep_comments: false }) }, module: ModuleOptions { rules: [ModuleRule { test: None, include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: None, description_data: None, side_effects: None, r#type: None, r#use: , parser: None, generator: None, resolve: None, one_of: None, rules: Some([ModuleRule { test: None, include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: Some("application/node"), description_data: None, side_effects: None, r#type: Some(Js), r#use: , parser: None, generator: None, resolve: None, one_of: None, rules: None, enforce: Normal }, ModuleRule { test: Some(RspackRegex { algo: EndWith { pats: [".json"] } }), include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: None, description_data: None, side_effects: None, r#type: Some(Json), r#use: , parser: None, generator: None, resolve: None, one_of: None, rules: None, enforce: Normal }, ModuleRule { test: None, include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: Some("application/json"), description_data: None, side_effects: None, r#type: Some(Json), r#use: , parser: None, generator: None, resolve: None, one_of: None, rules: None, enforce: Normal }, ModuleRule { test: Some(RspackRegex { algo: EndWith { pats: [".mjs"] } }), include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: None, description_data: None, side_effects: None, r#type: Some(JsEsm), r#use: , parser: None, generator: None, resolve: Some(Resolve { extensions: None, alias: Some([]), prefer_relative: None, symlinks: None, main_files: None, main_fields: None, browser_field: None, condition_names: None, tsconfig: None, modules: None, fallback: Some([]), fully_specified: None, exports_field: None, extension_alias: Some([]), by_dependency: Some(ByDependency({Esm: Resolve { extensions: None, alias: Some([]), prefer_relative: None, symlinks: None, main_files: None, main_fields: None, browser_field: None, condition_names: None, tsconfig: None, modules: None, fallback: Some([]), fully_specified: Some(true), exports_field: None, extension_alias: Some([]), by_dependency: None }})) }), one_of: None, rules: None, enforce: Normal }, ModuleRule { test: Some(RspackRegex { algo: EndWith { pats: [".js"] } }), include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: None, description_data: Some({"type": "module"}), side_effects: None, r#type: Some(JsEsm), r#use: , parser: None, generator: None, resolve: Some(Resolve { extensions: None, alias: Some([]), prefer_relative: None, symlinks: None, main_files: None, main_fields: None, browser_field: None, condition_names: None, tsconfig: None, modules: None, fallback: Some([]), fully_specified: None, exports_field: None, extension_alias: Some([]), by_dependency: Some(ByDependency({Esm: Resolve { extensions: None, alias: Some([]), prefer_relative: None, symlinks: None, main_files: None, main_fields: None, browser_field: None, condition_names: None, tsconfig: None, modules: None, fallback: Some([]), fully_specified: Some(true), exports_field: None, extension_alias: Some([]), by_dependency: None }})) }), one_of: None, rules: None, enforce: Normal }, ModuleRule { test: Some(RspackRegex { algo: EndWith { pats: [".cjs"] } }), include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: None, description_data: None, side_effects: None, r#type: Some(JsDynamic), r#use: , parser: None, generator: None, resolve: None, one_of: None, rules: None, enforce: Normal }, ModuleRule { test: Some(RspackRegex { algo: EndWith { pats: [".js"] } }), include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: None, description_data: Some({"type": "commonjs"}), side_effects: None, r#type: Some(JsDynamic), r#use: , parser: None, generator: None, resolve: None, one_of: None, rules: None, enforce: Normal }, ModuleRule { test: None, include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: Some(RuleSetLogicalConditions { and: None, or: Some(["text/javascript", "application/javascript"]), not: None }), description_data: None, side_effects: None, r#type: Some(JsEsm), r#use: , parser: None, generator: None, resolve: Some(Resolve { extensions: None, alias: Some([]), prefer_relative: None, symlinks: None, main_files: None, main_fields: None, browser_field: None, condition_names: None, tsconfig: None, modules: None, fallback: Some([]), fully_specified: None, exports_field: None, extension_alias: Some([]), by_dependency: Some(ByDependency({Esm: Resolve { extensions: None, alias: Some([]), prefer_relative: None, symlinks: None, main_files: None, main_fields: None, browser_field: None, condition_names: None, tsconfig: None, modules: None, fallback: Some([]), fully_specified: Some(true), exports_field: None, extension_alias: Some([]), by_dependency: None }})) }), one_of: None, rules: None, enforce: Normal }, ModuleRule { test: Some(RspackRegex { algo: EndWith { pats: [".jsx"] } }), include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: None, description_data: None, side_effects: None, r#type: Some(Jsx), r#use: , parser: None, generator: None, resolve: None, one_of: None, rules: None, enforce: Normal }, ModuleRule { test: Some(RspackRegex { algo: EndWith { pats: [".ts"] } }), include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: None, description_data: None, side_effects: None, r#type: Some(Ts), r#use: , parser: None, generator: None, resolve: None, one_of: None, rules: None, enforce: Normal }, ModuleRule { test: Some(RspackRegex { algo: EndWith { pats: [".tsx"] } }), include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: None, description_data: None, side_effects: None, r#type: Some(Tsx), r#use: , parser: None, generator: None, resolve: None, one_of: None, rules: None, enforce: Normal }, ModuleRule { test: Some(RspackRegex { algo: EndWith { pats: [".css"] } }), include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: None, description_data: None, side_effects: None, r#type: None, r#use: , parser: None, generator: None, resolve: None, one_of: Some([ModuleRule { test: Some(RspackRegex { algo: EndWith { pats: [".module.css"] } }), include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: None, description_data: None, side_effects: None, r#type: Some(CssModule), r#use: , parser: None, generator: None, resolve: Some(Resolve { extensions: None, alias: Some([]), prefer_relative: None, symlinks: None, main_files: None, main_fields: None, browser_field: None, condition_names: None, tsconfig: None, modules: None, fallback: Some([]), fully_specified: Some(true), exports_field: None, extension_alias: Some([]), by_dependency: None }), one_of: None, rules: None, enforce: Normal }, ModuleRule { test: None, include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: None, description_data: None, side_effects: None, r#type: Some(Css), r#use: , parser: None, generator: None, resolve: Some(Resolve { extensions: None, alias: Some([]), prefer_relative: Some(true), symlinks: None, main_files: None, main_fields: None, browser_field: None, condition_names: None, tsconfig: None, modules: None, fallback: Some([]), fully_specified: Some(true), exports_field: None, extension_alias: Some([]), by_dependency: None }), one_of: None, rules: None, enforce: Normal }]), rules: None, enforce: Normal }, ModuleRule { test: None, include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: Some("text/css+module"), description_data: None, side_effects: None, r#type: Some(CssModule), r#use: , parser: None, generator: None, resolve: Some(Resolve { extensions: None, alias: Some([]), prefer_relative: None, symlinks: None, main_files: None, main_fields: None, browser_field: None, condition_names: None, tsconfig: None, modules: None, fallback: Some([]), fully_specified: Some(true), exports_field: None, extension_alias: Some([]), by_dependency: None }), one_of: None, rules: None, enforce: Normal }, ModuleRule { test: None, include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: Some("text/css"), description_data: None, side_effects: None, r#type: Some(Css), r#use: , parser: None, generator: None, resolve: Some(Resolve { extensions: None, alias: Some([]), prefer_relative: Some(true), symlinks: None, main_files: None, main_fields: None, browser_field: None, condition_names: None, tsconfig: None, modules: None, fallback: Some([]), fully_specified: Some(true), exports_field: None, extension_alias: Some([]), by_dependency: None }), one_of: None, rules: None, enforce: Normal }, ModuleRule { test: None, include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: Some("url"), issuer: None, scheme: None, mimetype: None, description_data: None, side_effects: None, r#type: None, r#use: , parser: None, generator: None, resolve: None, one_of: Some([ModuleRule { test: None, include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: Some(RspackRegex { algo: Regress(Regex { cr: CompiledRegex { insns: [StartOfLine, ByteSeq4([100, 97, 116, 97]), EndOfLine, Goal], brackets: [], start_pred: Arbitrary, loops: 0, groups: 0, named_group_indices: {}, flags: Flags { icase: false, multiline: false, dot_all: false, no_opt: false, unicode: false } } }) }), mimetype: None, description_data: None, side_effects: None, r#type: Some(AssetInline), r#use: , parser: None, generator: None, resolve: None, one_of: None, rules: None, enforce: Normal }, ModuleRule { test: None, include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: None, description_data: None, side_effects: None, r#type: Some(AssetResource), r#use: , parser: None, generator: None, resolve: None, one_of: None, rules: None, enforce: Normal }]), rules: None, enforce: Normal }]), enforce: Normal }, ModuleRule { test: None, include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: None, description_data: None, side_effects: None, r#type: None, r#use: , parser: None, generator: None, resolve: None, one_of: None, rules: Some([]), enforce: Normal }], parser: Some(ParserOptionsByModuleType({Asset: Asset(AssetParserOptions { data_url_condition: Some(Options(AssetParserDataUrlOptions { max_size: Some(8096) })) })})), generator: Some(GeneratorOptionsByModuleType({})) }, devtool: Devtool { inner: SOURCE_MAP | MODULE }, stats: StatsOptions { colors: true }, snapshot: SnapshotOptions { resolve: SnapshotStrategy { hash: true, timestamp: true }, module: SnapshotStrategy { hash: true, timestamp: true } }, cache: Disabled, experiments: Experiments { lazy_compilation: false, incremental_rebuild: IncrementalRebuild { make: None, emit_asset: true }, async_web_assembly: false, new_split_chunks: true, css: true }, node: Some(NodeOption { dirname: "warn-mock", global: "warn", filename: "warn-mock" }), optimization: Optimization { remove_available_modules: true, remove_empty_chunks: true, side_effects: True } }, debug_id: 1, cached_source_sizes: {}, code_generation_dependencies: Some([]), presentational_dependencies: Some([HarmonyCompatibilityDependency, ConstDependency { start: 0, end: 34, content: "", runtime_requirements: None }, HarmonyImportSpecifierDependency { id: DependencyId(1), request: Atom('./answer' type=dynamic), shorthand: false, start: 136, end: 142, ids: [Atom('answer' type=inline)], is_call: false, specifier: Named(Atom('answer' type=inline), None) }]) }, 
    Identifier(u!("/Users/zhanglipeng/work/github/rspack/examples/basic/src/answer.js")): NormalModule { id: Identifier(u!("/Users/zhanglipeng/work/github/rspack/examples/basic/src/answer.js")), context: Context { inner: "/Users/zhanglipeng/work/github/rspack/examples/basic/src" }, request: "/Users/zhanglipeng/work/github/rspack/examples/basic/src/answer.js", user_request: "/Users/zhanglipeng/work/github/rspack/examples/basic/src/answer.js", raw_request: "./answer", module_type: Js, parser_and_generator: JavaScriptParserAndGenerator, match_resource: None, resource_data: ResourceData { resource: "/Users/zhanglipeng/work/github/rspack/examples/basic/src/answer.js", resource_path: "/Users/zhanglipeng/work/github/rspack/examples/basic/src/answer.js", resource_query: None, resource_fragment: None, resource_description: Some(DescriptionData { json: PkgJSON { name: Some("example-basic"), alias_fields: OnceCell([]), raw: Object {"name": String("example-basic"), "version": String("1.0.0"), "description": String(""), "main": String("index.js"), "private": Bool(true), "scripts": Object {"dev": String("rspack serve"), "build": String("rspack build")}, "devDependencies": Object {"@rspack/cli": String("workspace:*")}, "sideEffects": Bool(false), "keywords": Array [], "author": String(""), "license": String("MIT"), "dependencies": Object {"@rspack/core": String("workspace:^0.2.8")}} }, dir_path: NormalizedPath("/Users/zhanglipeng/work/github/rspack/examples/basic") }), mimetype: None, parameters: None, encoding: None, encoded_content: None, scheme: OnceCell(None) }, original_source: Some(Buffer([105, 109, 112, 111, 114, 116, 32, 39, 46, 47, 98, 97, 114, 39, 10, 105, 109, 112, 111, 114, 116, 40, 39, 46, 47, 102, 111, 111, 39, 41, 10, 101, 120, 112, 111, 114, 116, 32, 99, 111, 110, 115, 116, 32, 97, 110, 115, 119, 101, 114, 32, 61, 32, 52, 50, 59, 10])), ast_or_source: BuiltSucceed(AstOrSource { inner: (Some(JavaScript(Ast { program: Program { program: Module(Module { span: Span { lo: BytePos(1), hi: BytePos(59), ctxt: #0 }, body: [ModuleDecl(Import(ImportDecl { span: Span { lo: BytePos(1), hi: BytePos(16), ctxt: #0 }, specifiers: [], src: Str { span: Span { lo: BytePos(8), hi: BytePos(15), ctxt: #0 }, value: Atom('./bar' type=inline), raw: Some("'./bar'") }, type_only: false, asserts: None })), Stmt(Expr(ExprStmt { span: Span { lo: BytePos(17), hi: BytePos(33), ctxt: #0 }, expr: Call(CallExpr { span: Span { lo: BytePos(17), hi: BytePos(32), ctxt: #0 }, callee: Import(Import { span: Span { lo: BytePos(17), hi: BytePos(23), ctxt: #0 } }), args: [ExprOrSpread { spread: None, expr: Lit(Str(Str { span: Span { lo: BytePos(24), hi: BytePos(31), ctxt: #0 }, value: Atom('./foo' type=inline), raw: Some("'./foo'") })) }], type_args: None }) })), ModuleDecl(ExportDecl(ExportDecl { span: Span { lo: BytePos(34), hi: BytePos(59), ctxt: #0 }, decl: Var(VarDecl { span: Span { lo: BytePos(41), hi: BytePos(59), ctxt: #0 }, kind: "const", declare: false, decls: [VarDeclarator { span: Span { lo: BytePos(47), hi: BytePos(58), ctxt: #0 }, name: Ident(BindingIdent { id: Ident { span: Span { lo: BytePos(47), hi: BytePos(53), ctxt: #2 }, sym: Atom('answer' type=inline), optional: false }, type_ann: None }), init: Some(Lit(Num(Number { span: Span { lo: BytePos(56), hi: BytePos(58), ctxt: #0 }, value: 42.0, raw: Some("42") }))), definite: false }] }) }))], shebang: None }), comments: "..." }, context: Context { helpers: Helpers { external: true, mark: HelperMark(Mark(3)), inner: Inner { apply_decorated_descriptor: false, array_like_to_array: false, array_with_holes: false, array_without_holes: false, assert_this_initialized: false, async_generator: false, async_generator_delegate: false, async_iterator: false, async_to_generator: false, await_async_generator: false, await_value: false, check_private_redeclaration: false, class_apply_descriptor_destructure: false, class_apply_descriptor_get: false, class_apply_descriptor_set: false, class_apply_descriptor_update: false, class_call_check: false, class_check_private_static_field_descriptor: false, class_extract_field_descriptor: false, class_name_tdz_error: false, class_private_field_get: false, class_private_field_init: false, class_private_field_loose_base: false, class_private_field_loose_key: false, class_private_field_set: false, class_private_field_update: false, class_private_method_get: false, class_private_method_init: false, class_private_method_set: false, class_static_private_field_spec_get: false, class_static_private_field_spec_set: false, class_static_private_field_update: false, construct: false, create_class: false, decorate: false, defaults: false, define_enumerable_properties: false, define_property: false, export_star: false, extends: false, get: false, get_prototype_of: false, inherits: false, inherits_loose: false, initializer_define_property: false, initializer_warning_helper: false, instanceof: false, interop_require_default: false, interop_require_wildcard: false, is_native_function: false, iterable_to_array: false, iterable_to_array_limit: false, iterable_to_array_limit_loose: false, jsx: false, new_arrow_check: false, non_iterable_rest: false, non_iterable_spread: false, object_destructuring_empty: false, object_spread: false, object_spread_props: false, object_without_properties: false, object_without_properties_loose: false, possible_constructor_return: false, read_only_error: false, set: false, set_prototype_of: false, skip_first_generator_next: false, sliced_to_array: false, sliced_to_array_loose: false, super_prop_base: false, tagged_template_literal: false, tagged_template_literal_loose: false, throw: false, to_array: false, to_consumable_array: false, to_primitive: false, to_property_key: false, update: false, type_of: false, unsupported_iterable_to_array: false, wrap_async_generator: false, wrap_native_super: false, write_only_error: false, class_private_field_destructure: false, class_static_private_field_destructure: false, class_static_private_method_get: false, class_check_private_static_access: false, is_native_reflect_construct: false, create_super: false, create_for_of_iterator_helper_loose: false, ts_decorate: false, ts_generator: false, ts_metadata: false, ts_param: false, ts_values: false, apply_decs_2203_r: false, identity: false, dispose: false, using: false } }, top_level_mark: Mark(1), unresolved_mark: Mark(2) } })), Some(SourceMapSource { value: "import './bar';\nimport('./foo');\nexport const answer = 42;\n", name: "/Users/zhanglipeng/work/github/rspack/examples/basic/src/answer.js", source_map: SourceMap { file: None, mappings: "AAAA,OAAO,QAAO;AACd,MAAM,CAAC;AACP,OAAO,MAAM,SAAS,GAAG", sources: ["/Users/zhanglipeng/work/github/rspack/examples/basic/src/answer.js"], sources_content: ["import './bar'\nimport('./foo')\nexport const answer = 42;\n"], names: [] }, original_source: None, inner_source_map: None, remove_original_source: false })) }), resolve_options: None, parser_options: None, generator_options: None, options: CompilerOptions { context: Context { inner: "/Users/zhanglipeng/work/github/rspack/examples/basic" }, dev_server: DevServerOptions { hot: false }, output: OutputOptions { path: "/Users/zhanglipeng/work/github/rspack/packages/rspack-cli/dist", clean: false, public_path: Auto, asset_module_filename: Filename { template: "[hash][ext][query]" }, wasm_loading: Enable(Fetch), webassembly_module_filename: Filename { template: "[hash].module.wasm" }, unique_name: "example-basic", chunk_loading: Enable(Jsonp), chunk_loading_global: "webpackChunkexample_basic", filename: Filename { template: "[name].js" }, chunk_filename: Filename { template: "[name].js" }, cross_origin_loading: Disable, css_filename: Filename { template: "[name].css" }, css_chunk_filename: Filename { template: "[name].css" }, hot_update_main_filename: Filename { template: "[runtime].[fullhash].hot-update.json" }, hot_update_chunk_filename: Filename { template: "[id].[fullhash].hot-update.js" }, library: None, enabled_library_types: Some([]), strict_module_error_handling: false, global_object: "self", import_function_name: "import", iife: true, module: false, trusted_types: None, source_map_filename: Filename { template: "[file].map" }, hash_function: MD4, hash_digest: Hex, hash_digest_length: 20, hash_salt: None, async_chunks: true, worker_chunk_loading: Enable(ImportScripts), worker_wasm_loading: Enable(Fetch), worker_public_path: "" }, target: Target { es_version: None }, mode: Production, resolve: Resolve { extensions: Some([]), alias: Some([("@swc/helpers", [Target("/Users/zhanglipeng/work/github/rspack/node_modules/@swc/helpers")]), ("react-refresh", [Target("/Users/zhanglipeng/work/github/rspack/node_modules/react-refresh")])]), prefer_relative: None, symlinks: None, main_files: Some(["index"]), main_fields: Some(["main"]), browser_field: Some(true), condition_names: Some(["webpack", "production", "browser"]), tsconfig: None, modules: Some(["node_modules"]), fallback: Some([]), fully_specified: None, exports_field: Some([["exports"]]), extension_alias: Some([]), by_dependency: Some(ByDependency({Unknown: Resolve { extensions: Some([".js", ".json", ".wasm", ".tsx", ".ts", ".jsx"]), alias: Some([]), prefer_relative: None, symlinks: None, main_files: None, main_fields: Some(["browser", "module", "..."]), browser_field: Some(true), condition_names: Some(["require", "module", "..."]), tsconfig: None, modules: None, fallback: Some([]), fully_specified: None, exports_field: None, extension_alias: Some([]), by_dependency: None }, Wasm: Resolve { extensions: Some([".js", ".json", ".wasm", ".tsx", ".ts", ".jsx"]), alias: Some([]), prefer_relative: None, symlinks: None, main_files: None, main_fields: Some(["browser", "module", "..."]), browser_field: Some(true), condition_names: Some(["import", "module", "..."]), tsconfig: None, modules: None, fallback: Some([]), fully_specified: None, exports_field: None, extension_alias: Some([]), by_dependency: None }, Esm: Resolve { extensions: Some([".js", ".json", ".wasm", ".tsx", ".ts", ".jsx"]), alias: Some([]), prefer_relative: None, symlinks: None, main_files: None, main_fields: Some(["browser", "module", "..."]), browser_field: Some(true), condition_names: Some(["import", "module", "..."]), tsconfig: None, modules: None, fallback: Some([]), fully_specified: None, exports_field: None, extension_alias: Some([]), by_dependency: None }, CommonJS: Resolve { extensions: Some([".js", ".json", ".wasm", ".tsx", ".ts", ".jsx"]), alias: Some([]), prefer_relative: None, symlinks: None, main_files: None, main_fields: Some(["browser", "module", "..."]), browser_field: Some(true), condition_names: Some(["require", "module", "..."]), tsconfig: None, modules: None, fallback: Some([]), fully_specified: None, exports_field: None, extension_alias: Some([]), by_dependency: None }, Url: Resolve { extensions: None, alias: Some([]), prefer_relative: Some(true), symlinks: None, main_files: None, main_fields: None, browser_field: None, condition_names: None, tsconfig: None, modules: None, fallback: Some([]), fully_specified: None, exports_field: None, extension_alias: Some([]), by_dependency: None }, Worker: Resolve { extensions: Some([".js", ".json", ".wasm", ".tsx", ".ts", ".jsx"]), alias: Some([]), prefer_relative: Some(true), symlinks: None, main_files: None, main_fields: Some(["browser", "module", "..."]), browser_field: Some(true), condition_names: Some(["import", "module", "..."]), tsconfig: None, modules: None, fallback: Some([]), fully_specified: None, exports_field: None, extension_alias: Some([]), by_dependency: None }})) }, builtins: Builtins { minify_options: Some(Minification { passes: 1, drop_console: false, pure_funcs: [], extract_comments: None, test: None, include: None, exclude: None }), preset_env: None, define: {"process.env.NODE_ENV": "\"production\""}, provide: {}, tree_shaking: True, react: ReactOptions { runtime: Some("automatic"), import_source: None, pragma: None, pragma_frag: None, throw_if_namespace: None, development: None, use_builtins: None, use_spread: None, refresh: None }, decorator: Some(DecoratorOptions { legacy: true, emit_metadata: true }), no_emit_assets: false, emotion: None, dev_friendly_split_chunks: false, plugin_import: None, relay: None, code_generation: Some(CodeGeneration { keep_comments: false }) }, module: ModuleOptions { rules: [ModuleRule { test: None, include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: None, description_data: None, side_effects: None, r#type: None, r#use: , parser: None, generator: None, resolve: None, one_of: None, rules: Some([ModuleRule { test: None, include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: Some("application/node"), description_data: None, side_effects: None, r#type: Some(Js), r#use: , parser: None, generator: None, resolve: None, one_of: None, rules: None, enforce: Normal }, ModuleRule { test: Some(RspackRegex { algo: EndWith { pats: [".json"] } }), include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: None, description_data: None, side_effects: None, r#type: Some(Json), r#use: , parser: None, generator: None, resolve: None, one_of: None, rules: None, enforce: Normal }, ModuleRule { test: None, include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: Some("application/json"), description_data: None, side_effects: None, r#type: Some(Json), r#use: , parser: None, generator: None, resolve: None, one_of: None, rules: None, enforce: Normal }, ModuleRule { test: Some(RspackRegex { algo: EndWith { pats: [".mjs"] } }), include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: None, description_data: None, side_effects: None, r#type: Some(JsEsm), r#use: , parser: None, generator: None, resolve: Some(Resolve { extensions: None, alias: Some([]), prefer_relative: None, symlinks: None, main_files: None, main_fields: None, browser_field: None, condition_names: None, tsconfig: None, modules: None, fallback: Some([]), fully_specified: None, exports_field: None, extension_alias: Some([]), by_dependency: Some(ByDependency({Esm: Resolve { extensions: None, alias: Some([]), prefer_relative: None, symlinks: None, main_files: None, main_fields: None, browser_field: None, condition_names: None, tsconfig: None, modules: None, fallback: Some([]), fully_specified: Some(true), exports_field: None, extension_alias: Some([]), by_dependency: None }})) }), one_of: None, rules: None, enforce: Normal }, ModuleRule { test: Some(RspackRegex { algo: EndWith { pats: [".js"] } }), include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: None, description_data: Some({"type": "module"}), side_effects: None, r#type: Some(JsEsm), r#use: , parser: None, generator: None, resolve: Some(Resolve { extensions: None, alias: Some([]), prefer_relative: None, symlinks: None, main_files: None, main_fields: None, browser_field: None, condition_names: None, tsconfig: None, modules: None, fallback: Some([]), fully_specified: None, exports_field: None, extension_alias: Some([]), by_dependency: Some(ByDependency({Esm: Resolve { extensions: None, alias: Some([]), prefer_relative: None, symlinks: None, main_files: None, main_fields: None, browser_field: None, condition_names: None, tsconfig: None, modules: None, fallback: Some([]), fully_specified: Some(true), exports_field: None, extension_alias: Some([]), by_dependency: None }})) }), one_of: None, rules: None, enforce: Normal }, ModuleRule { test: Some(RspackRegex { algo: EndWith { pats: [".cjs"] } }), include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: None, description_data: None, side_effects: None, r#type: Some(JsDynamic), r#use: , parser: None, generator: None, resolve: None, one_of: None, rules: None, enforce: Normal }, ModuleRule { test: Some(RspackRegex { algo: EndWith { pats: [".js"] } }), include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: None, description_data: Some({"type": "commonjs"}), side_effects: None, r#type: Some(JsDynamic), r#use: , parser: None, generator: None, resolve: None, one_of: None, rules: None, enforce: Normal }, ModuleRule { test: None, include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: Some(RuleSetLogicalConditions { and: None, or: Some(["text/javascript", "application/javascript"]), not: None }), description_data: None, side_effects: None, r#type: Some(JsEsm), r#use: , parser: None, generator: None, resolve: Some(Resolve { extensions: None, alias: Some([]), prefer_relative: None, symlinks: None, main_files: None, main_fields: None, browser_field: None, condition_names: None, tsconfig: None, modules: None, fallback: Some([]), fully_specified: None, exports_field: None, extension_alias: Some([]), by_dependency: Some(ByDependency({Esm: Resolve { extensions: None, alias: Some([]), prefer_relative: None, symlinks: None, main_files: None, main_fields: None, browser_field: None, condition_names: None, tsconfig: None, modules: None, fallback: Some([]), fully_specified: Some(true), exports_field: None, extension_alias: Some([]), by_dependency: None }})) }), one_of: None, rules: None, enforce: Normal }, ModuleRule { test: Some(RspackRegex { algo: EndWith { pats: [".jsx"] } }), include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: None, description_data: None, side_effects: None, r#type: Some(Jsx), r#use: , parser: None, generator: None, resolve: None, one_of: None, rules: None, enforce: Normal }, ModuleRule { test: Some(RspackRegex { algo: EndWith { pats: [".ts"] } }), include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: None, description_data: None, side_effects: None, r#type: Some(Ts), r#use: , parser: None, generator: None, resolve: None, one_of: None, rules: None, enforce: Normal }, ModuleRule { test: Some(RspackRegex { algo: EndWith { pats: [".tsx"] } }), include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: None, description_data: None, side_effects: None, r#type: Some(Tsx), r#use: , parser: None, generator: None, resolve: None, one_of: None, rules: None, enforce: Normal }, ModuleRule { test: Some(RspackRegex { algo: EndWith { pats: [".css"] } }), include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: None, description_data: None, side_effects: None, r#type: None, r#use: , parser: None, generator: None, resolve: None, one_of: Some([ModuleRule { test: Some(RspackRegex { algo: EndWith { pats: [".module.css"] } }), include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: None, description_data: None, side_effects: None, r#type: Some(CssModule), r#use: , parser: None, generator: None, resolve: Some(Resolve { extensions: None, alias: Some([]), prefer_relative: None, symlinks: None, main_files: None, main_fields: None, browser_field: None, condition_names: None, tsconfig: None, modules: None, fallback: Some([]), fully_specified: Some(true), exports_field: None, extension_alias: Some([]), by_dependency: None }), one_of: None, rules: None, enforce: Normal }, ModuleRule { test: None, include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: None, description_data: None, side_effects: None, r#type: Some(Css), r#use: , parser: None, generator: None, resolve: Some(Resolve { extensions: None, alias: Some([]), prefer_relative: Some(true), symlinks: None, main_files: None, main_fields: None, browser_field: None, condition_names: None, tsconfig: None, modules: None, fallback: Some([]), fully_specified: Some(true), exports_field: None, extension_alias: Some([]), by_dependency: None }), one_of: None, rules: None, enforce: Normal }]), rules: None, enforce: Normal }, ModuleRule { test: None, include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: Some("text/css+module"), description_data: None, side_effects: None, r#type: Some(CssModule), r#use: , parser: None, generator: None, resolve: Some(Resolve { extensions: None, alias: Some([]), prefer_relative: None, symlinks: None, main_files: None, main_fields: None, browser_field: None, condition_names: None, tsconfig: None, modules: None, fallback: Some([]), fully_specified: Some(true), exports_field: None, extension_alias: Some([]), by_dependency: None }), one_of: None, rules: None, enforce: Normal }, ModuleRule { test: None, include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: Some("text/css"), description_data: None, side_effects: None, r#type: Some(Css), r#use: , parser: None, generator: None, resolve: Some(Resolve { extensions: None, alias: Some([]), prefer_relative: Some(true), symlinks: None, main_files: None, main_fields: None, browser_field: None, condition_names: None, tsconfig: None, modules: None, fallback: Some([]), fully_specified: Some(true), exports_field: None, extension_alias: Some([]), by_dependency: None }), one_of: None, rules: None, enforce: Normal }, ModuleRule { test: None, include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: Some("url"), issuer: None, scheme: None, mimetype: None, description_data: None, side_effects: None, r#type: None, r#use: , parser: None, generator: None, resolve: None, one_of: Some([ModuleRule { test: None, include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: Some(RspackRegex { algo: Regress(Regex { cr: CompiledRegex { insns: [StartOfLine, ByteSeq4([100, 97, 116, 97]), EndOfLine, Goal], brackets: [], start_pred: Arbitrary, loops: 0, groups: 0, named_group_indices: {}, flags: Flags { icase: false, multiline: false, dot_all: false, no_opt: false, unicode: false } } }) }), mimetype: None, description_data: None, side_effects: None, r#type: Some(AssetInline), r#use: , parser: None, generator: None, resolve: None, one_of: None, rules: None, enforce: Normal }, ModuleRule { test: None, include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: None, description_data: None, side_effects: None, r#type: Some(AssetResource), r#use: , parser: None, generator: None, resolve: None, one_of: None, rules: None, enforce: Normal }]), rules: None, enforce: Normal }]), enforce: Normal }, ModuleRule { test: None, include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: None, description_data: None, side_effects: None, r#type: None, r#use: , parser: None, generator: None, resolve: None, one_of: None, rules: Some([]), enforce: Normal }], parser: Some(ParserOptionsByModuleType({Asset: Asset(AssetParserOptions { data_url_condition: Some(Options(AssetParserDataUrlOptions { max_size: Some(8096) })) })})), generator: Some(GeneratorOptionsByModuleType({})) }, devtool: Devtool { inner: SOURCE_MAP | MODULE }, stats: StatsOptions { colors: true }, snapshot: SnapshotOptions { resolve: SnapshotStrategy { hash: true, timestamp: true }, module: SnapshotStrategy { hash: true, timestamp: true } }, cache: Disabled, experiments: Experiments { lazy_compilation: false, incremental_rebuild: IncrementalRebuild { make: None, emit_asset: true }, async_web_assembly: false, new_split_chunks: true, css: true }, node: Some(NodeOption { dirname: "warn-mock", global: "warn", filename: "warn-mock" }), optimization: Optimization { remove_available_modules: true, remove_empty_chunks: true, side_effects: True } }, debug_id: 2, cached_source_sizes: {}, code_generation_dependencies: Some([]), presentational_dependencies: Some([HarmonyCompatibilityDependency, ConstDependency { start: 0, end: 15, content: "", runtime_requirements: None }, HarmonyExportHeaderDependency { position: 33 }, HarmonyExportSpecifierDependency { exports: [(Atom('answer' type=inline), Atom('answer' type=inline))] }]) }, 
    Identifier(u!("/Users/zhanglipeng/work/github/rspack/examples/basic/src/foo.js")): NormalModule { id: Identifier(u!("/Users/zhanglipeng/work/github/rspack/examples/basic/src/foo.js")), context: Context { inner: "/Users/zhanglipeng/work/github/rspack/examples/basic/src" }, request: "/Users/zhanglipeng/work/github/rspack/examples/basic/src/foo.js", user_request: "/Users/zhanglipeng/work/github/rspack/examples/basic/src/foo.js", raw_request: "./foo", module_type: Js, parser_and_generator: JavaScriptParserAndGenerator, match_resource: None, resource_data: ResourceData { resource: "/Users/zhanglipeng/work/github/rspack/examples/basic/src/foo.js", resource_path: "/Users/zhanglipeng/work/github/rspack/examples/basic/src/foo.js", resource_query: None, resource_fragment: None, resource_description: Some(DescriptionData { json: PkgJSON { name: Some("example-basic"), alias_fields: OnceCell([]), raw: Object {"name": String("example-basic"), "version": String("1.0.0"), "description": String(""), "main": String("index.js"), "private": Bool(true), "scripts": Object {"dev": String("rspack serve"), "build": String("rspack build")}, "devDependencies": Object {"@rspack/cli": String("workspace:*")}, "sideEffects": Bool(false), "keywords": Array [], "author": String(""), "license": String("MIT"), "dependencies": Object {"@rspack/core": String("workspace:^0.2.8")}} }, dir_path: NormalizedPath("/Users/zhanglipeng/work/github/rspack/examples/basic") }), mimetype: None, parameters: None, encoding: None, encoded_content: None, scheme: OnceCell(None) }, original_source: Some(Buffer([99, 111, 110, 115, 111, 108, 101, 46, 108, 111, 103, 40, 39, 102, 111, 111, 39, 41, 10])), ast_or_source: BuiltSucceed(AstOrSource { inner: (Some(JavaScript(Ast { program: Program { program: Script(Script { span: Span { lo: BytePos(1), hi: BytePos(20), ctxt: #0 }, body: [Expr(ExprStmt { span: Span { lo: BytePos(1), hi: BytePos(20), ctxt: #0 }, expr: Call(CallExpr { span: Span { lo: BytePos(1), hi: BytePos(19), ctxt: #0 }, callee: Expr(Member(MemberExpr { span: Span { lo: BytePos(1), hi: BytePos(12), ctxt: #0 }, obj: Ident(Ident { span: Span { lo: BytePos(1), hi: BytePos(8), ctxt: #1 }, sym: Atom('console' type=inline), optional: false }), prop: Ident(Ident { span: Span { lo: BytePos(9), hi: BytePos(12), ctxt: #0 }, sym: Atom('log' type=static), optional: false }) })), args: [ExprOrSpread { spread: None, expr: Lit(Str(Str { span: Span { lo: BytePos(13), hi: BytePos(18), ctxt: #0 }, value: Atom('foo' type=inline), raw: Some("'foo'") })) }], type_args: None }) })], shebang: None }), comments: "..." }, context: Context { helpers: Helpers { external: true, mark: HelperMark(Mark(3)), inner: Inner { apply_decorated_descriptor: false, array_like_to_array: false, array_with_holes: false, array_without_holes: false, assert_this_initialized: false, async_generator: false, async_generator_delegate: false, async_iterator: false, async_to_generator: false, await_async_generator: false, await_value: false, check_private_redeclaration: false, class_apply_descriptor_destructure: false, class_apply_descriptor_get: false, class_apply_descriptor_set: false, class_apply_descriptor_update: false, class_call_check: false, class_check_private_static_field_descriptor: false, class_extract_field_descriptor: false, class_name_tdz_error: false, class_private_field_get: false, class_private_field_init: false, class_private_field_loose_base: false, class_private_field_loose_key: false, class_private_field_set: false, class_private_field_update: false, class_private_method_get: false, class_private_method_init: false, class_private_method_set: false, class_static_private_field_spec_get: false, class_static_private_field_spec_set: false, class_static_private_field_update: false, construct: false, create_class: false, decorate: false, defaults: false, define_enumerable_properties: false, define_property: false, export_star: false, extends: false, get: false, get_prototype_of: false, inherits: false, inherits_loose: false, initializer_define_property: false, initializer_warning_helper: false, instanceof: false, interop_require_default: false, interop_require_wildcard: false, is_native_function: false, iterable_to_array: false, iterable_to_array_limit: false, iterable_to_array_limit_loose: false, jsx: false, new_arrow_check: false, non_iterable_rest: false, non_iterable_spread: false, object_destructuring_empty: false, object_spread: false, object_spread_props: false, object_without_properties: false, object_without_properties_loose: false, possible_constructor_return: false, read_only_error: false, set: false, set_prototype_of: false, skip_first_generator_next: false, sliced_to_array: false, sliced_to_array_loose: false, super_prop_base: false, tagged_template_literal: false, tagged_template_literal_loose: false, throw: false, to_array: false, to_consumable_array: false, to_primitive: false, to_property_key: false, update: false, type_of: false, unsupported_iterable_to_array: false, wrap_async_generator: false, wrap_native_super: false, write_only_error: false, class_private_field_destructure: false, class_static_private_field_destructure: false, class_static_private_method_get: false, class_check_private_static_access: false, is_native_reflect_construct: false, create_super: false, create_for_of_iterator_helper_loose: false, ts_decorate: false, ts_generator: false, ts_metadata: false, ts_param: false, ts_values: false, apply_decs_2203_r: false, identity: false, dispose: false, using: false } }, top_level_mark: Mark(1), unresolved_mark: Mark(2) } })), Some(SourceMapSource { value: "console.log('foo');\n", name: "/Users/zhanglipeng/work/github/rspack/examples/basic/src/foo.js", source_map: SourceMap { file: None, mappings: "AAAA,QAAQ,GAAG,CAAC", sources: ["/Users/zhanglipeng/work/github/rspack/examples/basic/src/foo.js"], sources_content: ["console.log('foo')\n"], names: [] }, original_source: None, inner_source_map: None, remove_original_source: false })) }), resolve_options: None, parser_options: None, generator_options: None, options: CompilerOptions { context: Context { inner: "/Users/zhanglipeng/work/github/rspack/examples/basic" }, dev_server: DevServerOptions { hot: false }, output: OutputOptions { path: "/Users/zhanglipeng/work/github/rspack/packages/rspack-cli/dist", clean: false, public_path: Auto, asset_module_filename: Filename { template: "[hash][ext][query]" }, wasm_loading: Enable(Fetch), webassembly_module_filename: Filename { template: "[hash].module.wasm" }, unique_name: "example-basic", chunk_loading: Enable(Jsonp), chunk_loading_global: "webpackChunkexample_basic", filename: Filename { template: "[name].js" }, chunk_filename: Filename { template: "[name].js" }, cross_origin_loading: Disable, css_filename: Filename { template: "[name].css" }, css_chunk_filename: Filename { template: "[name].css" }, hot_update_main_filename: Filename { template: "[runtime].[fullhash].hot-update.json" }, hot_update_chunk_filename: Filename { template: "[id].[fullhash].hot-update.js" }, library: None, enabled_library_types: Some([]), strict_module_error_handling: false, global_object: "self", import_function_name: "import", iife: true, module: false, trusted_types: None, source_map_filename: Filename { template: "[file].map" }, hash_function: MD4, hash_digest: Hex, hash_digest_length: 20, hash_salt: None, async_chunks: true, worker_chunk_loading: Enable(ImportScripts), worker_wasm_loading: Enable(Fetch), worker_public_path: "" }, target: Target { es_version: None }, mode: Production, resolve: Resolve { extensions: Some([]), alias: Some([("@swc/helpers", [Target("/Users/zhanglipeng/work/github/rspack/node_modules/@swc/helpers")]), ("react-refresh", [Target("/Users/zhanglipeng/work/github/rspack/node_modules/react-refresh")])]), prefer_relative: None, symlinks: None, main_files: Some(["index"]), main_fields: Some(["main"]), browser_field: Some(true), condition_names: Some(["webpack", "production", "browser"]), tsconfig: None, modules: Some(["node_modules"]), fallback: Some([]), fully_specified: None, exports_field: Some([["exports"]]), extension_alias: Some([]), by_dependency: Some(ByDependency({Unknown: Resolve { extensions: Some([".js", ".json", ".wasm", ".tsx", ".ts", ".jsx"]), alias: Some([]), prefer_relative: None, symlinks: None, main_files: None, main_fields: Some(["browser", "module", "..."]), browser_field: Some(true), condition_names: Some(["require", "module", "..."]), tsconfig: None, modules: None, fallback: Some([]), fully_specified: None, exports_field: None, extension_alias: Some([]), by_dependency: None }, Wasm: Resolve { extensions: Some([".js", ".json", ".wasm", ".tsx", ".ts", ".jsx"]), alias: Some([]), prefer_relative: None, symlinks: None, main_files: None, main_fields: Some(["browser", "module", "..."]), browser_field: Some(true), condition_names: Some(["import", "module", "..."]), tsconfig: None, modules: None, fallback: Some([]), fully_specified: None, exports_field: None, extension_alias: Some([]), by_dependency: None }, Esm: Resolve { extensions: Some([".js", ".json", ".wasm", ".tsx", ".ts", ".jsx"]), alias: Some([]), prefer_relative: None, symlinks: None, main_files: None, main_fields: Some(["browser", "module", "..."]), browser_field: Some(true), condition_names: Some(["import", "module", "..."]), tsconfig: None, modules: None, fallback: Some([]), fully_specified: None, exports_field: None, extension_alias: Some([]), by_dependency: None }, CommonJS: Resolve { extensions: Some([".js", ".json", ".wasm", ".tsx", ".ts", ".jsx"]), alias: Some([]), prefer_relative: None, symlinks: None, main_files: None, main_fields: Some(["browser", "module", "..."]), browser_field: Some(true), condition_names: Some(["require", "module", "..."]), tsconfig: None, modules: None, fallback: Some([]), fully_specified: None, exports_field: None, extension_alias: Some([]), by_dependency: None }, Url: Resolve { extensions: None, alias: Some([]), prefer_relative: Some(true), symlinks: None, main_files: None, main_fields: None, browser_field: None, condition_names: None, tsconfig: None, modules: None, fallback: Some([]), fully_specified: None, exports_field: None, extension_alias: Some([]), by_dependency: None }, Worker: Resolve { extensions: Some([".js", ".json", ".wasm", ".tsx", ".ts", ".jsx"]), alias: Some([]), prefer_relative: Some(true), symlinks: None, main_files: None, main_fields: Some(["browser", "module", "..."]), browser_field: Some(true), condition_names: Some(["import", "module", "..."]), tsconfig: None, modules: None, fallback: Some([]), fully_specified: None, exports_field: None, extension_alias: Some([]), by_dependency: None }})) }, builtins: Builtins { minify_options: Some(Minification { passes: 1, drop_console: false, pure_funcs: [], extract_comments: None, test: None, include: None, exclude: None }), preset_env: None, define: {"process.env.NODE_ENV": "\"production\""}, provide: {}, tree_shaking: True, react: ReactOptions { runtime: Some("automatic"), import_source: None, pragma: None, pragma_frag: None, throw_if_namespace: None, development: None, use_builtins: None, use_spread: None, refresh: None }, decorator: Some(DecoratorOptions { legacy: true, emit_metadata: true }), no_emit_assets: false, emotion: None, dev_friendly_split_chunks: false, plugin_import: None, relay: None, code_generation: Some(CodeGeneration { keep_comments: false }) }, module: ModuleOptions { rules: [ModuleRule { test: None, include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: None, description_data: None, side_effects: None, r#type: None, r#use: , parser: None, generator: None, resolve: None, one_of: None, rules: Some([ModuleRule { test: None, include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: Some("application/node"), description_data: None, side_effects: None, r#type: Some(Js), r#use: , parser: None, generator: None, resolve: None, one_of: None, rules: None, enforce: Normal }, ModuleRule { test: Some(RspackRegex { algo: EndWith { pats: [".json"] } }), include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: None, description_data: None, side_effects: None, r#type: Some(Json), r#use: , parser: None, generator: None, resolve: None, one_of: None, rules: None, enforce: Normal }, ModuleRule { test: None, include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: Some("application/json"), description_data: None, side_effects: None, r#type: Some(Json), r#use: , parser: None, generator: None, resolve: None, one_of: None, rules: None, enforce: Normal }, ModuleRule { test: Some(RspackRegex { algo: EndWith { pats: [".mjs"] } }), include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: None, description_data: None, side_effects: None, r#type: Some(JsEsm), r#use: , parser: None, generator: None, resolve: Some(Resolve { extensions: None, alias: Some([]), prefer_relative: None, symlinks: None, main_files: None, main_fields: None, browser_field: None, condition_names: None, tsconfig: None, modules: None, fallback: Some([]), fully_specified: None, exports_field: None, extension_alias: Some([]), by_dependency: Some(ByDependency({Esm: Resolve { extensions: None, alias: Some([]), prefer_relative: None, symlinks: None, main_files: None, main_fields: None, browser_field: None, condition_names: None, tsconfig: None, modules: None, fallback: Some([]), fully_specified: Some(true), exports_field: None, extension_alias: Some([]), by_dependency: None }})) }), one_of: None, rules: None, enforce: Normal }, ModuleRule { test: Some(RspackRegex { algo: EndWith { pats: [".js"] } }), include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: None, description_data: Some({"type": "module"}), side_effects: None, r#type: Some(JsEsm), r#use: , parser: None, generator: None, resolve: Some(Resolve { extensions: None, alias: Some([]), prefer_relative: None, symlinks: None, main_files: None, main_fields: None, browser_field: None, condition_names: None, tsconfig: None, modules: None, fallback: Some([]), fully_specified: None, exports_field: None, extension_alias: Some([]), by_dependency: Some(ByDependency({Esm: Resolve { extensions: None, alias: Some([]), prefer_relative: None, symlinks: None, main_files: None, main_fields: None, browser_field: None, condition_names: None, tsconfig: None, modules: None, fallback: Some([]), fully_specified: Some(true), exports_field: None, extension_alias: Some([]), by_dependency: None }})) }), one_of: None, rules: None, enforce: Normal }, ModuleRule { test: Some(RspackRegex { algo: EndWith { pats: [".cjs"] } }), include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: None, description_data: None, side_effects: None, r#type: Some(JsDynamic), r#use: , parser: None, generator: None, resolve: None, one_of: None, rules: None, enforce: Normal }, ModuleRule { test: Some(RspackRegex { algo: EndWith { pats: [".js"] } }), include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: None, description_data: Some({"type": "commonjs"}), side_effects: None, r#type: Some(JsDynamic), r#use: , parser: None, generator: None, resolve: None, one_of: None, rules: None, enforce: Normal }, ModuleRule { test: None, include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: Some(RuleSetLogicalConditions { and: None, or: Some(["text/javascript", "application/javascript"]), not: None }), description_data: None, side_effects: None, r#type: Some(JsEsm), r#use: , parser: None, generator: None, resolve: Some(Resolve { extensions: None, alias: Some([]), prefer_relative: None, symlinks: None, main_files: None, main_fields: None, browser_field: None, condition_names: None, tsconfig: None, modules: None, fallback: Some([]), fully_specified: None, exports_field: None, extension_alias: Some([]), by_dependency: Some(ByDependency({Esm: Resolve { extensions: None, alias: Some([]), prefer_relative: None, symlinks: None, main_files: None, main_fields: None, browser_field: None, condition_names: None, tsconfig: None, modules: None, fallback: Some([]), fully_specified: Some(true), exports_field: None, extension_alias: Some([]), by_dependency: None }})) }), one_of: None, rules: None, enforce: Normal }, ModuleRule { test: Some(RspackRegex { algo: EndWith { pats: [".jsx"] } }), include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: None, description_data: None, side_effects: None, r#type: Some(Jsx), r#use: , parser: None, generator: None, resolve: None, one_of: None, rules: None, enforce: Normal }, ModuleRule { test: Some(RspackRegex { algo: EndWith { pats: [".ts"] } }), include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: None, description_data: None, side_effects: None, r#type: Some(Ts), r#use: , parser: None, generator: None, resolve: None, one_of: None, rules: None, enforce: Normal }, ModuleRule { test: Some(RspackRegex { algo: EndWith { pats: [".tsx"] } }), include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: None, description_data: None, side_effects: None, r#type: Some(Tsx), r#use: , parser: None, generator: None, resolve: None, one_of: None, rules: None, enforce: Normal }, ModuleRule { test: Some(RspackRegex { algo: EndWith { pats: [".css"] } }), include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: None, description_data: None, side_effects: None, r#type: None, r#use: , parser: None, generator: None, resolve: None, one_of: Some([ModuleRule { test: Some(RspackRegex { algo: EndWith { pats: [".module.css"] } }), include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: None, description_data: None, side_effects: None, r#type: Some(CssModule), r#use: , parser: None, generator: None, resolve: Some(Resolve { extensions: None, alias: Some([]), prefer_relative: None, symlinks: None, main_files: None, main_fields: None, browser_field: None, condition_names: None, tsconfig: None, modules: None, fallback: Some([]), fully_specified: Some(true), exports_field: None, extension_alias: Some([]), by_dependency: None }), one_of: None, rules: None, enforce: Normal }, ModuleRule { test: None, include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: None, description_data: None, side_effects: None, r#type: Some(Css), r#use: , parser: None, generator: None, resolve: Some(Resolve { extensions: None, alias: Some([]), prefer_relative: Some(true), symlinks: None, main_files: None, main_fields: None, browser_field: None, condition_names: None, tsconfig: None, modules: None, fallback: Some([]), fully_specified: Some(true), exports_field: None, extension_alias: Some([]), by_dependency: None }), one_of: None, rules: None, enforce: Normal }]), rules: None, enforce: Normal }, ModuleRule { test: None, include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: Some("text/css+module"), description_data: None, side_effects: None, r#type: Some(CssModule), r#use: , parser: None, generator: None, resolve: Some(Resolve { extensions: None, alias: Some([]), prefer_relative: None, symlinks: None, main_files: None, main_fields: None, browser_field: None, condition_names: None, tsconfig: None, modules: None, fallback: Some([]), fully_specified: Some(true), exports_field: None, extension_alias: Some([]), by_dependency: None }), one_of: None, rules: None, enforce: Normal }, ModuleRule { test: None, include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: Some("text/css"), description_data: None, side_effects: None, r#type: Some(Css), r#use: , parser: None, generator: None, resolve: Some(Resolve { extensions: None, alias: Some([]), prefer_relative: Some(true), symlinks: None, main_files: None, main_fields: None, browser_field: None, condition_names: None, tsconfig: None, modules: None, fallback: Some([]), fully_specified: Some(true), exports_field: None, extension_alias: Some([]), by_dependency: None }), one_of: None, rules: None, enforce: Normal }, ModuleRule { test: None, include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: Some("url"), issuer: None, scheme: None, mimetype: None, description_data: None, side_effects: None, r#type: None, r#use: , parser: None, generator: None, resolve: None, one_of: Some([ModuleRule { test: None, include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: Some(RspackRegex { algo: Regress(Regex { cr: CompiledRegex { insns: [StartOfLine, ByteSeq4([100, 97, 116, 97]), EndOfLine, Goal], brackets: [], start_pred: Arbitrary, loops: 0, groups: 0, named_group_indices: {}, flags: Flags { icase: false, multiline: false, dot_all: false, no_opt: false, unicode: false } } }) }), mimetype: None, description_data: None, side_effects: None, r#type: Some(AssetInline), r#use: , parser: None, generator: None, resolve: None, one_of: None, rules: None, enforce: Normal }, ModuleRule { test: None, include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: None, description_data: None, side_effects: None, r#type: Some(AssetResource), r#use: , parser: None, generator: None, resolve: None, one_of: None, rules: None, enforce: Normal }]), rules: None, enforce: Normal }]), enforce: Normal }, ModuleRule { test: None, include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: None, description_data: None, side_effects: None, r#type: None, r#use: , parser: None, generator: None, resolve: None, one_of: None, rules: Some([]), enforce: Normal }], parser: Some(ParserOptionsByModuleType({Asset: Asset(AssetParserOptions { data_url_condition: Some(Options(AssetParserDataUrlOptions { max_size: Some(8096) })) })})), generator: Some(GeneratorOptionsByModuleType({})) }, devtool: Devtool { inner: SOURCE_MAP | MODULE }, stats: StatsOptions { colors: true }, snapshot: SnapshotOptions { resolve: SnapshotStrategy { hash: true, timestamp: true }, module: SnapshotStrategy { hash: true, timestamp: true } }, cache: Disabled, experiments: Experiments { lazy_compilation: false, incremental_rebuild: IncrementalRebuild { make: None, emit_asset: true }, async_web_assembly: false, new_split_chunks: true, css: true }, node: Some(NodeOption { dirname: "warn-mock", global: "warn", filename: "warn-mock" }), optimization: Optimization { remove_available_modules: true, remove_empty_chunks: true, side_effects: True } }, debug_id: 3, cached_source_sizes: {}, code_generation_dependencies: Some([]), presentational_dependencies: Some([]) }, 
    Identifier(u!("/Users/zhanglipeng/work/github/rspack/examples/basic/src/bar.js")): NormalModule { id: Identifier(u!("/Users/zhanglipeng/work/github/rspack/examples/basic/src/bar.js")), context: Context { inner: "/Users/zhanglipeng/work/github/rspack/examples/basic/src" }, request: "/Users/zhanglipeng/work/github/rspack/examples/basic/src/bar.js", user_request: "/Users/zhanglipeng/work/github/rspack/examples/basic/src/bar.js", raw_request: "./bar", module_type: Js, parser_and_generator: JavaScriptParserAndGenerator, match_resource: None, resource_data: ResourceData { resource: "/Users/zhanglipeng/work/github/rspack/examples/basic/src/bar.js", resource_path: "/Users/zhanglipeng/work/github/rspack/examples/basic/src/bar.js", resource_query: None, resource_fragment: None, resource_description: Some(DescriptionData { json: PkgJSON { name: Some("example-basic"), alias_fields: OnceCell([]), raw: Object {"name": String("example-basic"), "version": String("1.0.0"), "description": String(""), "main": String("index.js"), "private": Bool(true), "scripts": Object {"dev": String("rspack serve"), "build": String("rspack build")}, "devDependencies": Object {"@rspack/cli": String("workspace:*")}, "sideEffects": Bool(false), "keywords": Array [], "author": String(""), "license": String("MIT"), "dependencies": Object {"@rspack/core": String("workspace:^0.2.8")}} }, dir_path: NormalizedPath("/Users/zhanglipeng/work/github/rspack/examples/basic") }), mimetype: None, parameters: None, encoding: None, encoded_content: None, scheme: OnceCell(None) }, original_source: Some(Buffer([99, 111, 110, 115, 111, 108, 101, 46, 108, 111, 103, 40, 39, 98, 97, 114, 39, 41, 10])), ast_or_source: BuiltSucceed(AstOrSource { inner: (Some(JavaScript(Ast { program: Program { program: Script(Script { span: Span { lo: BytePos(1), hi: BytePos(20), ctxt: #0 }, body: [Expr(ExprStmt { span: Span { lo: BytePos(1), hi: BytePos(20), ctxt: #0 }, expr: Call(CallExpr { span: Span { lo: BytePos(1), hi: BytePos(19), ctxt: #0 }, callee: Expr(Member(MemberExpr { span: Span { lo: BytePos(1), hi: BytePos(12), ctxt: #0 }, obj: Ident(Ident { span: Span { lo: BytePos(1), hi: BytePos(8), ctxt: #1 }, sym: Atom('console' type=inline), optional: false }), prop: Ident(Ident { span: Span { lo: BytePos(9), hi: BytePos(12), ctxt: #0 }, sym: Atom('log' type=static), optional: false }) })), args: [ExprOrSpread { spread: None, expr: Lit(Str(Str { span: Span { lo: BytePos(13), hi: BytePos(18), ctxt: #0 }, value: Atom('bar' type=inline), raw: Some("'bar'") })) }], type_args: None }) })], shebang: None }), comments: "..." }, context: Context { helpers: Helpers { external: true, mark: HelperMark(Mark(3)), inner: Inner { apply_decorated_descriptor: false, array_like_to_array: false, array_with_holes: false, array_without_holes: false, assert_this_initialized: false, async_generator: false, async_generator_delegate: false, async_iterator: false, async_to_generator: false, await_async_generator: false, await_value: false, check_private_redeclaration: false, class_apply_descriptor_destructure: false, class_apply_descriptor_get: false, class_apply_descriptor_set: false, class_apply_descriptor_update: false, class_call_check: false, class_check_private_static_field_descriptor: false, class_extract_field_descriptor: false, class_name_tdz_error: false, class_private_field_get: false, class_private_field_init: false, class_private_field_loose_base: false, class_private_field_loose_key: false, class_private_field_set: false, class_private_field_update: false, class_private_method_get: false, class_private_method_init: false, class_private_method_set: false, class_static_private_field_spec_get: false, class_static_private_field_spec_set: false, class_static_private_field_update: false, construct: false, create_class: false, decorate: false, defaults: false, define_enumerable_properties: false, define_property: false, export_star: false, extends: false, get: false, get_prototype_of: false, inherits: false, inherits_loose: false, initializer_define_property: false, initializer_warning_helper: false, instanceof: false, interop_require_default: false, interop_require_wildcard: false, is_native_function: false, iterable_to_array: false, iterable_to_array_limit: false, iterable_to_array_limit_loose: false, jsx: false, new_arrow_check: false, non_iterable_rest: false, non_iterable_spread: false, object_destructuring_empty: false, object_spread: false, object_spread_props: false, object_without_properties: false, object_without_properties_loose: false, possible_constructor_return: false, read_only_error: false, set: false, set_prototype_of: false, skip_first_generator_next: false, sliced_to_array: false, sliced_to_array_loose: false, super_prop_base: false, tagged_template_literal: false, tagged_template_literal_loose: false, throw: false, to_array: false, to_consumable_array: false, to_primitive: false, to_property_key: false, update: false, type_of: false, unsupported_iterable_to_array: false, wrap_async_generator: false, wrap_native_super: false, write_only_error: false, class_private_field_destructure: false, class_static_private_field_destructure: false, class_static_private_method_get: false, class_check_private_static_access: false, is_native_reflect_construct: false, create_super: false, create_for_of_iterator_helper_loose: false, ts_decorate: false, ts_generator: false, ts_metadata: false, ts_param: false, ts_values: false, apply_decs_2203_r: false, identity: false, dispose: false, using: false } }, top_level_mark: Mark(1), unresolved_mark: Mark(2) } })), Some(SourceMapSource { value: "console.log('bar');\n", name: "/Users/zhanglipeng/work/github/rspack/examples/basic/src/bar.js", source_map: SourceMap { file: None, mappings: "AAAA,QAAQ,GAAG,CAAC", sources: ["/Users/zhanglipeng/work/github/rspack/examples/basic/src/bar.js"], sources_content: ["console.log('bar')\n"], names: [] }, original_source: None, inner_source_map: None, remove_original_source: false })) }), resolve_options: None, parser_options: None, generator_options: None, options: CompilerOptions { context: Context { inner: "/Users/zhanglipeng/work/github/rspack/examples/basic" }, dev_server: DevServerOptions { hot: false }, output: OutputOptions { path: "/Users/zhanglipeng/work/github/rspack/packages/rspack-cli/dist", clean: false, public_path: Auto, asset_module_filename: Filename { template: "[hash][ext][query]" }, wasm_loading: Enable(Fetch), webassembly_module_filename: Filename { template: "[hash].module.wasm" }, unique_name: "example-basic", chunk_loading: Enable(Jsonp), chunk_loading_global: "webpackChunkexample_basic", filename: Filename { template: "[name].js" }, chunk_filename: Filename { template: "[name].js" }, cross_origin_loading: Disable, css_filename: Filename { template: "[name].css" }, css_chunk_filename: Filename { template: "[name].css" }, hot_update_main_filename: Filename { template: "[runtime].[fullhash].hot-update.json" }, hot_update_chunk_filename: Filename { template: "[id].[fullhash].hot-update.js" }, library: None, enabled_library_types: Some([]), strict_module_error_handling: false, global_object: "self", import_function_name: "import", iife: true, module: false, trusted_types: None, source_map_filename: Filename { template: "[file].map" }, hash_function: MD4, hash_digest: Hex, hash_digest_length: 20, hash_salt: None, async_chunks: true, worker_chunk_loading: Enable(ImportScripts), worker_wasm_loading: Enable(Fetch), worker_public_path: "" }, target: Target { es_version: None }, mode: Production, resolve: Resolve { extensions: Some([]), alias: Some([("@swc/helpers", [Target("/Users/zhanglipeng/work/github/rspack/node_modules/@swc/helpers")]), ("react-refresh", [Target("/Users/zhanglipeng/work/github/rspack/node_modules/react-refresh")])]), prefer_relative: None, symlinks: None, main_files: Some(["index"]), main_fields: Some(["main"]), browser_field: Some(true), condition_names: Some(["webpack", "production", "browser"]), tsconfig: None, modules: Some(["node_modules"]), fallback: Some([]), fully_specified: None, exports_field: Some([["exports"]]), extension_alias: Some([]), by_dependency: Some(ByDependency({Unknown: Resolve { extensions: Some([".js", ".json", ".wasm", ".tsx", ".ts", ".jsx"]), alias: Some([]), prefer_relative: None, symlinks: None, main_files: None, main_fields: Some(["browser", "module", "..."]), browser_field: Some(true), condition_names: Some(["require", "module", "..."]), tsconfig: None, modules: None, fallback: Some([]), fully_specified: None, exports_field: None, extension_alias: Some([]), by_dependency: None }, Wasm: Resolve { extensions: Some([".js", ".json", ".wasm", ".tsx", ".ts", ".jsx"]), alias: Some([]), prefer_relative: None, symlinks: None, main_files: None, main_fields: Some(["browser", "module", "..."]), browser_field: Some(true), condition_names: Some(["import", "module", "..."]), tsconfig: None, modules: None, fallback: Some([]), fully_specified: None, exports_field: None, extension_alias: Some([]), by_dependency: None }, Esm: Resolve { extensions: Some([".js", ".json", ".wasm", ".tsx", ".ts", ".jsx"]), alias: Some([]), prefer_relative: None, symlinks: None, main_files: None, main_fields: Some(["browser", "module", "..."]), browser_field: Some(true), condition_names: Some(["import", "module", "..."]), tsconfig: None, modules: None, fallback: Some([]), fully_specified: None, exports_field: None, extension_alias: Some([]), by_dependency: None }, CommonJS: Resolve { extensions: Some([".js", ".json", ".wasm", ".tsx", ".ts", ".jsx"]), alias: Some([]), prefer_relative: None, symlinks: None, main_files: None, main_fields: Some(["browser", "module", "..."]), browser_field: Some(true), condition_names: Some(["require", "module", "..."]), tsconfig: None, modules: None, fallback: Some([]), fully_specified: None, exports_field: None, extension_alias: Some([]), by_dependency: None }, Url: Resolve { extensions: None, alias: Some([]), prefer_relative: Some(true), symlinks: None, main_files: None, main_fields: None, browser_field: None, condition_names: None, tsconfig: None, modules: None, fallback: Some([]), fully_specified: None, exports_field: None, extension_alias: Some([]), by_dependency: None }, Worker: Resolve { extensions: Some([".js", ".json", ".wasm", ".tsx", ".ts", ".jsx"]), alias: Some([]), prefer_relative: Some(true), symlinks: None, main_files: None, main_fields: Some(["browser", "module", "..."]), browser_field: Some(true), condition_names: Some(["import", "module", "..."]), tsconfig: None, modules: None, fallback: Some([]), fully_specified: None, exports_field: None, extension_alias: Some([]), by_dependency: None }})) }, builtins: Builtins { minify_options: Some(Minification { passes: 1, drop_console: false, pure_funcs: [], extract_comments: None, test: None, include: None, exclude: None }), preset_env: None, define: {"process.env.NODE_ENV": "\"production\""}, provide: {}, tree_shaking: True, react: ReactOptions { runtime: Some("automatic"), import_source: None, pragma: None, pragma_frag: None, throw_if_namespace: None, development: None, use_builtins: None, use_spread: None, refresh: None }, decorator: Some(DecoratorOptions { legacy: true, emit_metadata: true }), no_emit_assets: false, emotion: None, dev_friendly_split_chunks: false, plugin_import: None, relay: None, code_generation: Some(CodeGeneration { keep_comments: false }) }, module: ModuleOptions { rules: [ModuleRule { test: None, include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: None, description_data: None, side_effects: None, r#type: None, r#use: , parser: None, generator: None, resolve: None, one_of: None, rules: Some([ModuleRule { test: None, include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: Some("application/node"), description_data: None, side_effects: None, r#type: Some(Js), r#use: , parser: None, generator: None, resolve: None, one_of: None, rules: None, enforce: Normal }, ModuleRule { test: Some(RspackRegex { algo: EndWith { pats: [".json"] } }), include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: None, description_data: None, side_effects: None, r#type: Some(Json), r#use: , parser: None, generator: None, resolve: None, one_of: None, rules: None, enforce: Normal }, ModuleRule { test: None, include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: Some("application/json"), description_data: None, side_effects: None, r#type: Some(Json), r#use: , parser: None, generator: None, resolve: None, one_of: None, rules: None, enforce: Normal }, ModuleRule { test: Some(RspackRegex { algo: EndWith { pats: [".mjs"] } }), include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: None, description_data: None, side_effects: None, r#type: Some(JsEsm), r#use: , parser: None, generator: None, resolve: Some(Resolve { extensions: None, alias: Some([]), prefer_relative: None, symlinks: None, main_files: None, main_fields: None, browser_field: None, condition_names: None, tsconfig: None, modules: None, fallback: Some([]), fully_specified: None, exports_field: None, extension_alias: Some([]), by_dependency: Some(ByDependency({Esm: Resolve { extensions: None, alias: Some([]), prefer_relative: None, symlinks: None, main_files: None, main_fields: None, browser_field: None, condition_names: None, tsconfig: None, modules: None, fallback: Some([]), fully_specified: Some(true), exports_field: None, extension_alias: Some([]), by_dependency: None }})) }), one_of: None, rules: None, enforce: Normal }, ModuleRule { test: Some(RspackRegex { algo: EndWith { pats: [".js"] } }), include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: None, description_data: Some({"type": "module"}), side_effects: None, r#type: Some(JsEsm), r#use: , parser: None, generator: None, resolve: Some(Resolve { extensions: None, alias: Some([]), prefer_relative: None, symlinks: None, main_files: None, main_fields: None, browser_field: None, condition_names: None, tsconfig: None, modules: None, fallback: Some([]), fully_specified: None, exports_field: None, extension_alias: Some([]), by_dependency: Some(ByDependency({Esm: Resolve { extensions: None, alias: Some([]), prefer_relative: None, symlinks: None, main_files: None, main_fields: None, browser_field: None, condition_names: None, tsconfig: None, modules: None, fallback: Some([]), fully_specified: Some(true), exports_field: None, extension_alias: Some([]), by_dependency: None }})) }), one_of: None, rules: None, enforce: Normal }, ModuleRule { test: Some(RspackRegex { algo: EndWith { pats: [".cjs"] } }), include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: None, description_data: None, side_effects: None, r#type: Some(JsDynamic), r#use: , parser: None, generator: None, resolve: None, one_of: None, rules: None, enforce: Normal }, ModuleRule { test: Some(RspackRegex { algo: EndWith { pats: [".js"] } }), include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: None, description_data: Some({"type": "commonjs"}), side_effects: None, r#type: Some(JsDynamic), r#use: , parser: None, generator: None, resolve: None, one_of: None, rules: None, enforce: Normal }, ModuleRule { test: None, include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: Some(RuleSetLogicalConditions { and: None, or: Some(["text/javascript", "application/javascript"]), not: None }), description_data: None, side_effects: None, r#type: Some(JsEsm), r#use: , parser: None, generator: None, resolve: Some(Resolve { extensions: None, alias: Some([]), prefer_relative: None, symlinks: None, main_files: None, main_fields: None, browser_field: None, condition_names: None, tsconfig: None, modules: None, fallback: Some([]), fully_specified: None, exports_field: None, extension_alias: Some([]), by_dependency: Some(ByDependency({Esm: Resolve { extensions: None, alias: Some([]), prefer_relative: None, symlinks: None, main_files: None, main_fields: None, browser_field: None, condition_names: None, tsconfig: None, modules: None, fallback: Some([]), fully_specified: Some(true), exports_field: None, extension_alias: Some([]), by_dependency: None }})) }), one_of: None, rules: None, enforce: Normal }, ModuleRule { test: Some(RspackRegex { algo: EndWith { pats: [".jsx"] } }), include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: None, description_data: None, side_effects: None, r#type: Some(Jsx), r#use: , parser: None, generator: None, resolve: None, one_of: None, rules: None, enforce: Normal }, ModuleRule { test: Some(RspackRegex { algo: EndWith { pats: [".ts"] } }), include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: None, description_data: None, side_effects: None, r#type: Some(Ts), r#use: , parser: None, generator: None, resolve: None, one_of: None, rules: None, enforce: Normal }, ModuleRule { test: Some(RspackRegex { algo: EndWith { pats: [".tsx"] } }), include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: None, description_data: None, side_effects: None, r#type: Some(Tsx), r#use: , parser: None, generator: None, resolve: None, one_of: None, rules: None, enforce: Normal }, ModuleRule { test: Some(RspackRegex { algo: EndWith { pats: [".css"] } }), include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: None, description_data: None, side_effects: None, r#type: None, r#use: , parser: None, generator: None, resolve: None, one_of: Some([ModuleRule { test: Some(RspackRegex { algo: EndWith { pats: [".module.css"] } }), include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: None, description_data: None, side_effects: None, r#type: Some(CssModule), r#use: , parser: None, generator: None, resolve: Some(Resolve { extensions: None, alias: Some([]), prefer_relative: None, symlinks: None, main_files: None, main_fields: None, browser_field: None, condition_names: None, tsconfig: None, modules: None, fallback: Some([]), fully_specified: Some(true), exports_field: None, extension_alias: Some([]), by_dependency: None }), one_of: None, rules: None, enforce: Normal }, ModuleRule { test: None, include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: None, description_data: None, side_effects: None, r#type: Some(Css), r#use: , parser: None, generator: None, resolve: Some(Resolve { extensions: None, alias: Some([]), prefer_relative: Some(true), symlinks: None, main_files: None, main_fields: None, browser_field: None, condition_names: None, tsconfig: None, modules: None, fallback: Some([]), fully_specified: Some(true), exports_field: None, extension_alias: Some([]), by_dependency: None }), one_of: None, rules: None, enforce: Normal }]), rules: None, enforce: Normal }, ModuleRule { test: None, include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: Some("text/css+module"), description_data: None, side_effects: None, r#type: Some(CssModule), r#use: , parser: None, generator: None, resolve: Some(Resolve { extensions: None, alias: Some([]), prefer_relative: None, symlinks: None, main_files: None, main_fields: None, browser_field: None, condition_names: None, tsconfig: None, modules: None, fallback: Some([]), fully_specified: Some(true), exports_field: None, extension_alias: Some([]), by_dependency: None }), one_of: None, rules: None, enforce: Normal }, ModuleRule { test: None, include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: Some("text/css"), description_data: None, side_effects: None, r#type: Some(Css), r#use: , parser: None, generator: None, resolve: Some(Resolve { extensions: None, alias: Some([]), prefer_relative: Some(true), symlinks: None, main_files: None, main_fields: None, browser_field: None, condition_names: None, tsconfig: None, modules: None, fallback: Some([]), fully_specified: Some(true), exports_field: None, extension_alias: Some([]), by_dependency: None }), one_of: None, rules: None, enforce: Normal }, ModuleRule { test: None, include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: Some("url"), issuer: None, scheme: None, mimetype: None, description_data: None, side_effects: None, r#type: None, r#use: , parser: None, generator: None, resolve: None, one_of: Some([ModuleRule { test: None, include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: Some(RspackRegex { algo: Regress(Regex { cr: CompiledRegex { insns: [StartOfLine, ByteSeq4([100, 97, 116, 97]), EndOfLine, Goal], brackets: [], start_pred: Arbitrary, loops: 0, groups: 0, named_group_indices: {}, flags: Flags { icase: false, multiline: false, dot_all: false, no_opt: false, unicode: false } } }) }), mimetype: None, description_data: None, side_effects: None, r#type: Some(AssetInline), r#use: , parser: None, generator: None, resolve: None, one_of: None, rules: None, enforce: Normal }, ModuleRule { test: None, include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: None, description_data: None, side_effects: None, r#type: Some(AssetResource), r#use: , parser: None, generator: None, resolve: None, one_of: None, rules: None, enforce: Normal }]), rules: None, enforce: Normal }]), enforce: Normal }, ModuleRule { test: None, include: None, exclude: None, resource: None, resource_query: None, resource_fragment: None, dependency: None, issuer: None, scheme: None, mimetype: None, description_data: None, side_effects: None, r#type: None, r#use: , parser: None, generator: None, resolve: None, one_of: None, rules: Some([]), enforce: Normal }], parser: Some(ParserOptionsByModuleType({Asset: Asset(AssetParserOptions { data_url_condition: Some(Options(AssetParserDataUrlOptions { max_size: Some(8096) })) })})), generator: Some(GeneratorOptionsByModuleType({})) }, devtool: Devtool { inner: SOURCE_MAP | MODULE }, stats: StatsOptions { colors: true }, snapshot: SnapshotOptions { resolve: SnapshotStrategy { hash: true, timestamp: true }, module: SnapshotStrategy { hash: true, timestamp: true } }, cache: Disabled, experiments: Experiments { lazy_compilation: false, incremental_rebuild: IncrementalRebuild { make: None, emit_asset: true }, async_web_assembly: false, new_split_chunks: true, css: true }, node: Some(NodeOption { dirname: "warn-mock", global: "warn", filename: "warn-mock" }), optimization: Optimization { remove_available_modules: true, remove_empty_chunks: true, side_effects: True } }, debug_id: 4, cached_source_sizes: {}, code_generation_dependencies: Some([]), presentational_dependencies: Some([]) }
  }, 
  module_identifier_to_module_graph_module: {
      Identifier(u!("/Users/zhanglipeng/work/github/rspack/examples/basic/src/index.js")): ModuleGraphModule { outgoing_connections: {ConnectionId(1)}, incoming_connections: {ConnectionId(0)}, issuer: None, module_identifier: Identifier(u!("/Users/zhanglipeng/work/github/rspack/examples/basic/src/index.js")), module_type: Js, dependencies: [DependencyId(1)], pre_order_index: Some(0), post_order_index: Some(2), module_syntax: (empty), factory_meta: Some(FactoryMeta { side_effects: Some(false) }), build_info: Some(BuildInfo { cacheable: true, hash: Some(RspackHashDigest { encoded: "d74e663e50e481a31d8273f244baf613" }), strict: true, file_dependencies: {"/Users/zhanglipeng/work/github/rspack/examples/basic/src/index.js"}, context_dependencies: {}, missing_dependencies: {}, build_dependencies: {}, asset_filenames: {} }), build_meta: Some(BuildMeta { strict: false, strict_harmony_module: false, is_async: false, esm: true, exports_type: Namespace, default_object: False, module_argument: "module", exports_argument: "__webpack_exports__" }) }, 
      Identifier(u!("/Users/zhanglipeng/work/github/rspack/examples/basic/src/answer.js")): ModuleGraphModule { outgoing_connections: {ConnectionId(2), ConnectionId(3)}, incoming_connections: {ConnectionId(1)}, issuer: Some(Identifier(u!("/Users/zhanglipeng/work/github/rspack/examples/basic/src/index.js"))), module_identifier: Identifier(u!("/Users/zhanglipeng/work/github/rspack/examples/basic/src/answer.js")), module_type: Js, dependencies: [DependencyId(2), DependencyId(3)], pre_order_index: Some(1), post_order_index: Some(1), module_syntax: (empty), factory_meta: Some(FactoryMeta { side_effects: Some(false) }), build_info: Some(BuildInfo { cacheable: true, hash: Some(RspackHashDigest { encoded: "b37add869501b2ca462759ec20a2d889" }), strict: true, file_dependencies: {"/Users/zhanglipeng/work/github/rspack/examples/basic/src/answer.js"}, context_dependencies: {}, missing_dependencies: {}, build_dependencies: {}, asset_filenames: {} }), build_meta: Some(BuildMeta { strict: false, strict_harmony_module: false, is_async: false, esm: true, exports_type: Namespace, default_object: False, module_argument: "module", exports_argument: "__webpack_exports__" }) }, 
      Identifier(u!("/Users/zhanglipeng/work/github/rspack/examples/basic/src/foo.js")): ModuleGraphModule { outgoing_connections: {}, incoming_connections: {ConnectionId(2)}, issuer: Some(Identifier(u!("/Users/zhanglipeng/work/github/rspack/examples/basic/src/answer.js"))), module_identifier: Identifier(u!("/Users/zhanglipeng/work/github/rspack/examples/basic/src/foo.js")), module_type: Js, dependencies: [], pre_order_index: Some(3), post_order_index: Some(3), module_syntax: (empty), factory_meta: Some(FactoryMeta { side_effects: Some(false) }), build_info: Some(BuildInfo { cacheable: true, hash: Some(RspackHashDigest { encoded: "bc552fe0f4fb987ab0172a9d3dbe5ed1" }), strict: false, file_dependencies: {"/Users/zhanglipeng/work/github/rspack/examples/basic/src/foo.js"}, context_dependencies: {}, missing_dependencies: {}, build_dependencies: {}, asset_filenames: {} }), build_meta: Some(BuildMeta { strict: false, strict_harmony_module: false, is_async: false, esm: false, exports_type: Dynamic, default_object: False, module_argument: "module", exports_argument: "exports" }) }, 
      Identifier(u!("/Users/zhanglipeng/work/github/rspack/examples/basic/src/bar.js")): ModuleGraphModule { outgoing_connections: {}, incoming_connections: {ConnectionId(3)}, issuer: Some(Identifier(u!("/Users/zhanglipeng/work/github/rspack/examples/basic/src/answer.js"))), module_identifier: Identifier(u!("/Users/zhanglipeng/work/github/rspack/examples/basic/src/bar.js")), module_type: Js, dependencies: [], pre_order_index: Some(2), post_order_index: Some(0), module_syntax: (empty), factory_meta: Some(FactoryMeta { side_effects: Some(false) }), build_info: Some(BuildInfo { cacheable: true, hash: Some(RspackHashDigest { encoded: "8227c78948f353e336c3515c64f42b07" }), strict: false, file_dependencies: {"/Users/zhanglipeng/work/github/rspack/examples/basic/src/bar.js"}, context_dependencies: {}, missing_dependencies: {}, build_dependencies: {}, asset_filenames: {} }), build_meta: Some(BuildMeta { strict: false, strict_harmony_module: false, is_async: false, esm: false, exports_type: Dynamic, default_object: False, module_argument: "module", exports_argument: "exports" }) }
  },
  dependency_id_to_connection_id: {
    DependencyId(0): ConnectionId(0), 
    DependencyId(2): ConnectionId(2), 
    DependencyId(1): ConnectionId(1), 
    DependencyId(3): ConnectionId(3)
  }, 
connection_id_to_dependency_id: {
  ConnectionId(0): DependencyId(0), 
  ConnectionId(2): DependencyId(2), 
  ConnectionId(1): DependencyId(1), 
  ConnectionId(3): DependencyId(3)
}, 
dependencies: {
  DependencyId(0): EntryDependency { id: DependencyId(0), request: "./src/index.js" }, 
  DependencyId(2): ImportDependency { start: 16, end: 31, id: DependencyId(2), request: Atom('./foo' type=inline), span: Some(ErrorSpan { start: 16, end: 31 }), group_options: ChunkGroupOptions { name: None, entry_options: None } }, 
  DependencyId(1): HarmonyImportDependency { request: Atom('./answer' type=dynamic), id: DependencyId(1), span: Some(ErrorSpan { start: 0, end: 34 }), specifiers: [Named(Atom('answer' type=inline), None)], dependency_type: EsmImport, export_all: false }, 
  DependencyId(3): HarmonyImportDependency { request: Atom('./bar' type=inline), id: DependencyId(3), span: Some(ErrorSpan { start: 0, end: 15 }), specifiers: [], dependency_type: EsmImport, export_all: false }
}, 
connections: [
  Some(ModuleGraphConnection { original_module_identifier: None, module_identifier: Identifier(u!("/Users/zhanglipeng/work/github/rspack/examples/basic/src/index.js")), dependency_id: DependencyId(0) }), 
  Some(ModuleGraphConnection { original_module_identifier: Some(Identifier(u!("/Users/zhanglipeng/work/github/rspack/examples/basic/src/index.js"))), module_identifier: Identifier(u!("/Users/zhanglipeng/work/github/rspack/examples/basic/src/answer.js")), dependency_id: DependencyId(1) }), 
  Some(ModuleGraphConnection { original_module_identifier: Some(Identifier(u!("/Users/zhanglipeng/work/github/rspack/examples/basic/src/answer.js"))), module_identifier: Identifier(u!("/Users/zhanglipeng/work/github/rspack/examples/basic/src/foo.js")), dependency_id: DependencyId(2) }),
  Some(ModuleGraphConnection { original_module_identifier: Some(Identifier(u!("/Users/zhanglipeng/work/github/rspack/examples/basic/src/answer.js"))), module_identifier: Identifier(u!("/Users/zhanglipeng/work/github/rspack/examples/basic/src/bar.js")), dependency_id: DependencyId(3) })
],
connections_map: {
  ModuleGraphConnection { original_module_identifier: Some(Identifier(u!("/Users/zhanglipeng/work/github/rspack/examples/basic/src/answer.js"))), module_identifier: Identifier(u!("/Users/zhanglipeng/work/github/rspack/examples/basic/src/bar.js")), dependency_id: DependencyId(3) }: ConnectionId(3),
  ModuleGraphConnection { original_module_identifier: Some(Identifier(u!("/Users/zhanglipeng/work/github/rspack/examples/basic/src/index.js"))), module_identifier: Identifier(u!("/Users/zhanglipeng/work/github/rspack/examples/basic/src/answer.js")), dependency_id: DependencyId(1) }: ConnectionId(1), 
  ModuleGraphConnection { original_module_identifier: Some(Identifier(u!("/Users/zhanglipeng/work/github/rspack/examples/basic/src/answer.js"))), module_identifier: Identifier(u!("/Users/zhanglipeng/work/github/rspack/examples/basic/src/foo.js")), dependency_id: DependencyId(2) }: ConnectionId(2), 
  ModuleGraphConnection { original_module_identifier: None, module_identifier: Identifier(u!("/Users/zhanglipeng/work/github/rspack/examples/basic/src/index.js")), dependency_id: DependencyId(0) }: ConnectionId(0)
},
import_var_map: {
  Identifier(u!("/Users/zhanglipeng/work/github/rspack/examples/basic/src/index.js")): {"./answer": "_answer__WEBPACK_IMPORTED_MODULE_0_"}, Identifier(u!("/Users/zhanglipeng/work/github/rspack/examples/basic/src/answer.js")): {"./bar": "_bar__WEBPACK_IMPORTED_MODULE_1_", "./foo": "_foo__WEBPACK_IMPORTED_MODULE_0_"}
  } 
}